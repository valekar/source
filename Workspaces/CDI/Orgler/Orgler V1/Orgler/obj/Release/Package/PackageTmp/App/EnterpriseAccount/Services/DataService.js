
enterpriseAccMod.factory("EnterpriseAccountDataService", [ 'uiGridConstants', 'uiGridGroupingConstants','$localStorage', '$filter',
    function (uiGridConstants, uiGridGroupingConstants, $localStorage, $filter) {
        //Variables to store data
        var EnterpriseAccountSearchInput = {};
        var EnterpriseAccountCreateInput = {};
        var EnterpriseAccountSearchResults = {};
        var EnterpriseAccountlastSearchResults = {};
        var EnterpriseAccountlastSearchInput = {};
        var searchParams;
        var Details = {
            EntOrgDetailData: [],
            EntOrgDetailDataFetched: false,
            RFMDetailsData: [],
            RFMDetailsFetched: false,
            TransformationDetailData: [],
            TransformationDetailFetched: false,
            TagsData: [],
            TagsFetched: false,
            EntOrgHierarchyData: [],
            EntOrgHierarchyFetched: false,
            MasterBridgeLocationData: [],
            MasterBridgeLocationFetched: false,
            MasterBridgeMasterData: [],
            MasterBridgeMasterFetched: false,
            NaicsCodeStewData: [],
            NaicsCodeStewFetched: false,
            RankingStewData: [],
            RankingStewFetched: false,
            TransactionHistoryData: [],
            TransactionHistoryFetched: false
        }; //Search Details

        //Filter Condition for the grid
        var filterCondition = {
            condition: uiGridConstants.filter.STARTS_WITH,
            placeholder: 'Starts with'
        };

        var filterConditionWildcard = {
            condition: uiGridConstants.filter.CONTAINS,
            placeholder: 'Contains'
        };

        //Method to control the availability of the filter
        function customGridFilter(type, $scope) {
            return [{
                title: 'Filter',
                icon: 'ui-grid-icon-filter',
                action: function ($event) {
                    switch (type) {
                        case "EntOrgDetail":
                            $scope.entOrgDetailGridOptions.enableFiltering = !$scope.entOrgDetailGridOptions.enableFiltering;
                            $scope.entOrgDetailGridApi.core.notifyDataChange(uiGridConstants.dataChange.ALL);
                            break;
                        case "RFMDetails":
                            $scope.rFMDetailsGridOptions.enableFiltering = !$scope.rFMDetailsGridOptions.enableFiltering;
                            $scope.rFMDetailsGridApi.core.notifyDataChange(uiGridConstants.dataChange.ALL);
                            break;
                        case "TransformationDetail":
                            $scope.transformationDetailGridOptions.enableFiltering = !$scope.transformationDetailGridOptions.enableFiltering;
                            $scope.transformationDetailGridApi.core.notifyDataChange(uiGridConstants.dataChange.ALL);
                            break;
                        case "Tags":
                            $scope.tagsGridOptions.enableFiltering = !$scope.tagsGridOptions.enableFiltering;
                            $scope.tagsGridApi.core.notifyDataChange(uiGridConstants.dataChange.ALL);
                            break;
                        case "EntOrgHierarchy":
                            $scope.entOrgHierarchyGridOptions.enableFiltering = !$scope.entOrgHierarchyGridOptions.enableFiltering;
                            $scope.entOrgHierarchyGridApi.core.notifyDataChange(uiGridConstants.dataChange.ALL);
                            break;
                        case "MasterBridgeLocation":
                            $scope.masterBridgeLocationGridOptions.enableFiltering = !$scope.masterBridgeLocationGridOptions.enableFiltering;
                            $scope.masterBridgeLocationGridApi.core.notifyDataChange(uiGridConstants.dataChange.ALL);
                            break;
                        case "MasterBridgeMaster":
                            $scope.masterBridgeMasterGridOptions.enableFiltering = !$scope.masterBridgeMasterGridOptions.enableFiltering;
                            $scope.masterBridgeMasterGridApi.core.notifyDataChange(uiGridConstants.dataChange.ALL);
                            break;
                        case "NaicsCodeStew":
                            $scope.naicsCodeStewGridOptions.enableFiltering = !$scope.naicsCodeStewGridOptions.enableFiltering;
                            $scope.naicsCodeStewGridApi.core.notifyDataChange(uiGridConstants.dataChange.ALL);
                            break;
                        case "RankingStew":
                            $scope.rankingStewGridOptions.enableFiltering = !$scope.rankingStewGridOptions.enableFiltering;
                            $scope.rankingStewGridApi.core.notifyDataChange(uiGridConstants.dataChange.ALL);
                            break;
                        case "TransactionHistory":
                            $scope.transactionHistoryGridOptions.enableFiltering = !$scope.transactionHistoryGridOptions.enableFiltering;
                            $scope.transactionHistoryGridApi.core.notifyDataChange(uiGridConstants.dataChange.ALL);
                            break;
                    }
                }
            }];
        }

        var GRID_HEADER_TEMPLATE = '<div ng-class="{ \'sortable\': sortable }" tooltip-placement="top-left" tooltip-append-to-body="true" uib-tooltip="{{col.displayName}}">' +
                                    '<div class="ui-grid-cell-contents " col-index="renderIndex" title="TOOLTIP">' +
                                        '<span class="ui-grid-header-cell-label ">{{ col.displayName CUSTOM_FILTERS }}</span>' +
                                        '<span ui-grid-visible="col.sort.direction" ng-class="{ \'ui-grid-icon-up-dir\': col.sort.direction == asc, \'ui-grid-icon-down-dir\': col.sort.direction == desc, \'ui-grid-icon-blank\': !col.sort.direction }">&nbsp</span>' +
                                    '</div>' +
                                    '<div class="ui-grid-column-menu-button" ng-if="grid.options.enableColumnMenus && !col.isRowHeader  && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}">' +
                                        '<i class="ui-grid-icon-angle-down">&nbsp;</i>' +
                                    '</div>' +
                                    '<div ui-grid-filter></div>' +
                                '</div>';

        var AFFIL_GRID_HEADER_TEMPLATE = '<div ng-class="{ \'sortable\': sortable }" tooltip-placement="top-left" tooltip-append-to-body="true" uib-tooltip="{{col.displayName}}">' +
                                    '<div class="ui-grid-cell-contents " col-index="renderIndex" title="TOOLTIP">' +
                                        '<span class="ui-grid-header-cell-label ">{{ col.displayName CUSTOM_FILTERS }}</span>' +
                                        '<span ui-grid-visible="col.sort.direction" ng-class="{ \'ui-grid-icon-up-dir\': col.sort.direction == asc, \'ui-grid-icon-down-dir\': col.sort.direction == desc, \'ui-grid-icon-blank\': !col.sort.direction }">&nbsp</span>' +
                                    '</div>' +
                                    '<div class="ui-grid-column-menu-button" ng-if="grid.options.enableColumnMenus && !col.isRowHeader  && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}">' +
                                        '<i class="ui-grid-icon-angle-down">&nbsp;</i>' +
                                    '</div>' +
                                    '<div ui-grid-filter></div>' +
                                '</div>';

        //Functions to set and get data
        return {
            setEnterpriseAccountSearchInput: function (data) {
                EnterpriseAccountSearchInput = data;
            },
            getEnterpriseAccountSearchInput: function () {
                return EnterpriseAccountSearchInput;
            },
            setEnterpriseAccountCreateInput: function (data) {
                EnterpriseAccountCreateInput = data;
            },
            getEnterpriseAccountCreateInput: function () {
                return EnterpriseAccountCreateInput;
            },
            setEnterpriseAccountSearchResults: function (data) {
                EnterpriseAccountSearchResults = data;
            },
            getEnterpriseAccountSearchResults: function () {
                return EnterpriseAccountSearchResults;
            },
            setEnterpriseAccountlastSearchResults: function (data) {
                $localStorage.EnterpriseAccountlastSearchResults = data;
            },
            getEnterpriseAccountlastSearchResults: function () {
                return $localStorage.EnterpriseAccountlastSearchResults;
            },
            setEnterpriseAccountlastSearchInput: function (data) {
                $localStorage.EnterpriseAccountlastSearchInput = data;
            },
            getEnterpriseAccountlastSearchInput: function () {
                return $localStorage.EnterpriseAccountlastSearchInput;
            },
            getSearchParams: function ($scope, searchRowCount, appendString, $rootScope) {
                var postParams = { "EnterpriseOrgInputSearchModel": [] };
                var searchParams;
                function returnNewParams() {
                    searchParams = {
                        "EnterpriseOrgID": "",
                        "EnterpriseOrgName": "",
                        "RankProviderInput": "",
                        "RankTo": "",
                        "RankFrom":"",
                        //"SourceSystem": "",
                        //"ChapterSystem":"",                       
                        "listNaicsCodes": "",
                        "Tags": "",
                        "IncludeSuperiorIncludeSubordinate": "",
                        "ExcludeTransformations": false,                       
                        "Username": "",
                       // "Recentchanges": false
                    };
                    return searchParams;
                };

                returnNewParams();

                for (i = 1; i <= searchRowCount; i++) {
                    searchParams["EnterpriseOrgID"] = $scope.InputParams.EnterpriseOrgId[appendString + i];
                    searchParams["EnterpriseOrgName"] = $scope.InputParams.EnterpriseOrgName[appendString + i];
                    searchParams["RankProviderInput"] = $scope.InputParams.RankProviderInput[appendString + i];
                    searchParams["RankTo"] = $scope.InputParams.RankTo[appendString + i];
                    searchParams["RankFrom"] = $scope.InputParams.RankFrom[appendString + i];
                    //searchParams["SourceSystem"] = $scope.InputParams.SourceSystem[appendString + i];
                    //searchParams["ChapterSystem"] = $scope.InputParams.ChapterSystem[appendString + i];
                    searchParams["listNaicsCodes"] = $scope.InputParams.ListNaicsCode[appendString + i];
                    //searchParams["listNaicsCodes"] = $scope.InputParams.ListNaicsCode;
                    searchParams["Tags"] = $scope.InputParams.Tags[appendString + i];
                    searchParams["IncludeSuperiorIncludeSubordinate"] = $scope.InputParams.IncludeSuperiorOrSubordinate[appendString + i];
                    if (searchParams.IncludeSuperiorIncludeSubordinate != undefined) {
                        if (searchParams.IncludeSuperiorIncludeSubordinate[0] == "Include Superior") {
                            searchParams["IncludeSuperior"] = true;
                        }
                        else searchParams["IncludeSuperior"] = false;

                        if (searchParams.IncludeSuperiorIncludeSubordinate[1] == "Include Subordinate") {
                            searchParams["IncludeSubordinate"] = true;
                        }
                        else searchParams["IncludeSubordinate"] = false;
                    }
                    else { searchParams["IncludeSuperior"] = false; searchParams["IncludeSubordinate"] = false; }                     
                    
                        searchParams["ExcludeTransformations"] = $scope.InputParams.ExcludeTransformations[appendString + i];                               
                    
                        searchParams["Username"] = $scope.InputParams.Username[appendString + i];
                   // searchParams["Username"] = $scope.InputParams.UserName;
                    //searchParams["Recentchanges"] = $scope.InputParams.RecentChanges[appendString + i];
                    postParams["EnterpriseOrgInputSearchModel"].push(searchParams);
                    returnNewParams();
                }
                return postParams;
            },
            clearSearchParams: function ($scope, maxSearchPanelCount, defaultOpenPanelsCount, appendString, $rootScope) {


                for (i = 1; i <= maxSearchPanelCount; i++) {
                    $scope.InputParams.EnterpriseOrgId[appendString + i] = "";
                    $scope.InputParams.EnterpriseOrgName[appendString + i] = undefined;
                    $scope.InputParams.RankProviderInput[appendString + i] = undefined;
                    $scope.InputParams.RankTo[appendString + i] = undefined;
                    $scope.InputParams.RankFrom[appendString + i]= undefined;
                    //$scope.InputParams.SourceSystem[appendString + i] = undefined;
                    //$scope.InputParams.ChapterSystem[appendString + i] = undefined;                  
                    $scope.InputParams.ListNaicsCode[appendString + i] = undefined;
                    $scope.InputParams.Tags[appendString + i] = undefined;
                    $scope.InputParams.IncludeSuperior[appendString + i] = false;
                    $scope.InputParams.IncludeSubordinate[appendString + i] = false;
                    $scope.InputParams.IncludeSuperiorOrSubordinate[appendString + i] = undefined;
                    $scope.InputParams.ExcludeTransformations[appendString + i] = undefined;
                    $scope.InputParams.Username[appendString + i] = undefined;
                    $scope.InputParams.SearchMeChkbx[appendString + i] = false;
                    //$scope.InputParams.RecentChanges[appendString + i] = false;
                   

                }
                $scope.SearchRows = defaultOpenPanelsCount;
                for (i = 1; i <= $scope.SearchRows; i++) {

                    $scope.InputParams.SearchPanel[appendString + i] = true;
                    $scope.InputParams.PanelSeparator[appendString + i] = true;
                    $scope.InputParams.showCloseButton[appendString + i] = true;
                    if (i == 1) {
                        $scope.InputParams.showCloseButton[appendString + i] = false; // hide the close button for the fist search panel
                    }
                }
                for (i = $scope.SearchRows + 1; i <= maxSearchPanelCount ; i++) {
                    $scope.InputParams.SearchPanel[appendString + i] = false;
                    $scope.InputParams.PanelSeparator[appendString + i] = false;
                    $scope.InputParams.showCloseButton[appendString + i] = false;

                }
            },
            getCreateEnterpriseAccountParams: function ($scope) {
                
                var postParams = {
                    "CreateEnterpriseOrgInputModel":
                        {
                            "ent_org_name": $scope.EnterpriseOrgName,
                            "ent_org_src_cd": $scope.SourceSystem,
                            "nk_ent_org_id": $scope.SourceSystemId,                           
                            "user_id": $scope.UserName
                        }
                }
                //  console.log(postParams);
                return postParams;
            },
            setSearchParams: function (searchParam) {
                searchParams = searchParam;
            },
            getSavedSearchParams: function () {
                return searchParams;
            },

            /* ************** Details Data Service Methods *************** */
            setDetails: function (data, sectionName) {
                if (!angular.isUndefined(localStorage.EntOrgSearchDetails)) {
                    Details = JSON.parse(localStorage.EntOrgSearchDetails);
                }
                switch(sectionName)
                {
                    case "EntOrgDetail": Details.EntOrgDetailData = data; Details.EntOrgDetailDataFetched = true; break;
                    case "RFMDetails": Details.RFMDetailsData = data; Details.RFMDetailsDataFetched = true; break;
                    case "TransformationDetail": Details.TransformationDetailData = data; Details.TransformationDetailFetched = true; break;
                    case "Tags": Details.TagsData = data; Details.TagsFetched = true; break;
                    case "EntOrgHierarchy": Details.EntOrgHierarchyData = data; Details.EntOrgHierarchyFetched = true; break;
                    //case "MasterBridgeLocation": Details.MasterBridgeLocationData = data; Details.MasterBridgeLocationFetched = true; break;
                    //case "MasterBridgeMaster": Details.MasterBridgeMasterData = data; Details.MasterBridgeMasterFetched = true; break;
                    case "MasterBridgeLocation":
                        var tempDataLoc = angular.copy(data);
                        angular.forEach(tempDataLoc, function (v, k) {
                            v.section_nm = "MasterBridgeLocation";
                        });
                        var tempDataMs = angular.copy(data);
                        angular.forEach(tempDataMs, function (v, k) {
                            v.section_nm = "MasterBridgeMaster";
                        });
                        Details.MasterBridgeLocationData = tempDataLoc; Details.MasterBridgeLocationFetched = true;
                        Details.MasterBridgeMasterData = tempDataMs; Details.MasterBridgeMasterFetched = true; break;
                    case "MasterBridgeMaster":
                        var tempDataLoc = angular.copy(data);
                        angular.forEach(tempDataLoc, function (v, k) {
                            v.section_nm = "MasterBridgeLocation";
                        });
                        var tempDataMs = angular.copy(data);
                        angular.forEach(tempDataMs, function (v, k) {
                            v.section_nm = "MasterBridgeMaster";
                        });
                        Details.MasterBridgeLocationData = tempDataLoc; Details.MasterBridgeLocationFetched = true;
                        Details.MasterBridgeMasterData = tempDataMs; Details.MasterBridgeMasterFetched = true; break;
                    case "NaicsCodeStew": Details.NaicsCodeStewData = data; Details.NaicsCodeStewFetched = true; break;
                    case "RankingStew": Details.RankingStewData = data; Details.RankingStewFetched = true; break;
                    case "TransactionHistory": Details.TransactionHistoryData = data; Details.TransactionHistoryFetched = true; break;
                }
                localStorage.setItem('EntOrgSearchDetails', JSON.stringify(Details));
            },
            getDetails: function (sectionName) {
                if (!angular.isUndefined(localStorage.EntOrgSearchDetails)) {
                    var tempDetails = JSON.parse(localStorage.EntOrgSearchDetails);
                    switch (sectionName) {
                        case "EntOrgDetail": return tempDetails.EntOrgDetailData; break;
                        case "RFMDetails": return tempDetails.RFMDetailsData; break;
                        case "TransformationDetail": return tempDetails.TransformationDetailData; break;
                        case "Tags": return tempDetails.TagsData; break;
                        case "EntOrgHierarchy": return tempDetails.EntOrgHierarchyData; break;
                        case "MasterBridgeLocation": return tempDetails.MasterBridgeLocationData; break;
                        case "MasterBridgeMaster": return tempDetails.MasterBridgeMasterData; break;
                        case "NaicsCodeStew": return tempDetails.NaicsCodeStewData; break;
                        case "RankingStew": return tempDetails.RankingStewData; break;
                        case "TransactionHistory": return tempDetails.TransactionHistoryData; break;
                    }
                }
                else {
                    switch (sectionName) {
                        case "EntOrgDetail": return Details.EntOrgDetailData; break;
                        case "RFMDetails": return Details.RFMDetailsData; break;
                        case "TransformationDetail": return Details.TransformationDetailData; break;
                        case "Tags": return Details.TagsData; break;
                        case "EntOrgHierarchy": return Details.EntOrgHierarchyData; break;
                        case "MasterBridgeLocation": return Details.MasterBridgeLocationData; break;
                        case "MasterBridgeMaster": return Details.MasterBridgeMasterData; break;
                        case "NaicsCodeStew": return Details.NaicsCodeStewData; break;
                        case "RankingStew": return Details.RankingStewData; break;
                        case "TransactionHistory": return Details.TransactionHistoryData; break;
                    }
                }
            },
            getActiveDetails: function (sectionName) {
                if (!angular.isUndefined(localStorage.EntOrgSearchDetails)) {
                    var tempDetails = JSON.parse(localStorage.EntOrgSearchDetails);
                    switch (sectionName) {
                        case "EntOrgDetail": return tempDetails.EntOrgDetailData; break;
                        case "RFMDetails": return filterLRecords(tempDetails.RFMDetailsData, "row_stat_cd"); break;
                        case "TransformationDetail":
                            var aggrRes = angular.copy(tempDetails.TransformationDetailData);
                            aggrRes.output = angular.copy(filterLRecords(tempDetails.TransformationDetailData.output, "act_ind"));
                            return aggrRes; break;
                        case "Tags": return filterLRecords(tempDetails.TagsData, "row_stat_cd"); break;
                        case "EntOrgHierarchy": return filterLRecords(tempDetails.EntOrgHierarchyData, "row_stat_cd"); break;
                        case "MasterBridgeLocation": return tempDetails.MasterBridgeLocationData; break;
                        case "MasterBridgeMaster": return tempDetails.MasterBridgeMasterData; break;
                        case "NaicsCodeStew": return tempDetails.NaicsCodeStewData; break;
                        case "RankingStew": return tempDetails.RankingStewData; break;
                        case "TransactionHistory": return tempDetails.TransactionHistoryData; break;
                    }
                }
                else {
                    switch (sectionName) {
                        case "EntOrgDetail": return Details.EntOrgDetailData; break;
                        case "RFMDetails": return filterLRecords(Details.RFMDetailsData, "row_stat_cd"); break;
                        case "TransformationDetail":
                            var aggrRes = angular.copy(Details.TransformationDetailData);
                            aggrRes.output = angular.copy(filterLRecords(Details.TransformationDetailData.output, "act_ind"));
                            return aggrRes; break;
                        //case "TransformationDetail": return filterLRecords(Details.TransformationDetailData, "act_ind"); break;
                        case "Tags": return filterLRecords(Details.TagsData, "row_stat_cd"); break;
                        case "EntOrgHierarchy": return filterLRecords(Details.EntOrgHierarchyData, "row_stat_cd"); break;
                        case "MasterBridgeLocation": return Details.MasterBridgeLocationData; break;
                        case "MasterBridgeMaster": return Details.MasterBridgeMasterData; break;
                        case "NaicsCodeStew": return Details.NaicsCodeStewData; break;
                        case "RankingStew": return Details.RankingStewData; break;
                        case "TransactionHistory": return Details.TransactionHistoryData; break;
                    }
                }
            },
            clearDetails: function () {
                Details = {
                    EntOrgDetailData: [],
                    EntOrgDetailDataFetched: false,
                    RFMDetailsData: [],
                    RFMDetailsDataFetched: false,
                    TransformationDetailData: [],
                    TransformationDetailFetched: false,
                    TagsData: [],
                    TagsFetched: false,
                    EntOrgHierarchyData: [],
                    EntOrgHierarchyFetched: false,
                    MasterBridgeLocationData: [],
                    MasterBridgeLocationFetched: false,
                    MasterBridgeMasterData: [],
                    MasterBridgeMasterFetched: false,
                    NaicsCodeStewData: [],
                    NaicsCodeStewFetched: false,
                    RankingStewData: [],
                    RankingStewFetched: false,
                    TransactionHistoryData: [],
                    TransactionHistoryFetched: false
                };

                localStorage.setItem('EntOrgSearchDetails', JSON.stringify(Details));
            },
            getDetailsDataFetchedFlag: function (sectionName) {
                if (!angular.isUndefined(localStorage.EntOrgSearchDetails)) {
                    var tempDetails = JSON.parse(localStorage.EntOrgSearchDetails);
                    switch (sectionName) {
                        case "EntOrgDetail": return tempDetails.EntOrgDetailDataFetched; break;
                        case "RFMDetails": return tempDetails.RFMDetailsDataFetched; break;
                        case "TransformationDetail": return tempDetails.TransformationDetailFetched; break;
                        case "Tags": return tempDetails.TagsFetched; break;
                        case "EntOrgHierarchy": return tempDetails.EntOrgHierarchyFetched; break;
                        case "MasterBridgeLocation": return tempDetails.MasterBridgeLocationFetched; break;
                        case "MasterBridgeMaster": return tempDetails.MasterBridgeMasterFetched; break;
                        case "NaicsCodeStew": return tempDetails.NaicsCodeStewFetched; break;
                        case "RankingStew": return tempDetails.RankingStewFetched; break;
                        case "TransactionHistory": return tempDetails.TransactionHistoryFetched; break;
                    }
                }
                else {
                    switch (sectionName) {
                        case "EntOrgDetail": return Details.EntOrgDetailDataFetched; break;
                        case "RFMDetails": return Details.RFMDetailsDataFetched; break;
                        case "TransformationDetail": return Details.TransformationDetailFetched; break;
                        case "Tags": return Details.TagsFetched; break;
                        case "EntOrgHierarchy": return Details.EntOrgHierarchyFetched; break;
                        case "MasterBridgeLocation": return Details.MasterBridgeLocationFetched; break;
                        case "MasterBridgeMaster": return Details.MasterBridgeMasterFetched; break;
                        case "NaicsCodeStew": return Details.NaicsCodeStewFetched; break;
                        case "RankingStew": return Details.RankingStewFetched; break;
                        case "TransactionHistory": return Details.TransactionHistoryFetched; break;
                    }
                }
            },
            filterInactiveRecords: function(data, columnName) {
                    var tempData = [];
                    angular.forEach(data, function (v, k) {
                        if (columnName == "row_stat_cd")
                        {
                            if (v.row_stat_cd != 'L')
                            {
                                tempData.push(v);
                            }
                        }
                        if(columnName == "act_ind")
                        {
                            if (v.act_ind == 1) {
                                tempData.push(v);
                            }
                        }
                    });
                    return tempData;
            },
            getDetailsGridOption: function (inactiveCol, inactiveVal, actionFlag) {
                var rowTlp = '';
                if (inactiveCol != '' && actionFlag)
                    rowTlp = '<div ng-class="{\'greyClass\':row.entity.' + inactiveCol + '==\'' + inactiveVal + '\' || row.treeNode.children[0].row.entity.' + inactiveCol + '==\'' + inactiveVal + '\',\'yellowClass\':row.entity.strTransNotes.length > \'0\' || row.treeNode.children[0].row.entity.strTransNotes.length > \'0\' }"> <div ng-repeat="col in colContainer.renderedColumns track by col.colDef.name"  class="ui-grid-cell" ui-grid-cell></div></div>';
                else if (actionFlag)
                    rowTlp = '<div ng-class="{\'yellowClass\':row.entity.strTransNotes.length > \'0\' || row.treeNode.children[0].row.entity.strTransNotes.length > \'0\' }"> <div ng-repeat="col in colContainer.renderedColumns track by col.colDef.name"  class="ui-grid-cell" ui-grid-cell></div></div>';
                else if (inactiveCol != '')
                    rowTlp = '<div ng-class="{\'greyClass\':row.entity.' + inactiveCol + '==\'' + inactiveVal + '\' || row.treeNode.children[0].row.entity.' + inactiveCol + '==\'' + inactiveVal + '\' }"> <div ng-repeat="col in colContainer.renderedColumns track by col.colDef.name"  class="ui-grid-cell" ui-grid-cell></div></div>';
                
                return {
                    enablePager: false,
                    paginationPageSize: 10,
                    enableSorting: true,
                    enableGridMenu: true,
                    enableFiltering: false,
                    paginationPageSizes: [5, 10, 15, 20, 25, 30, 35, 40, 45, 50],
                    enablePaginationControls: false,
                    enableVerticalScrollbar: 1,
                    enableHorizontalScrollbar: 1,
                    showGridFooter: false,
                    selectionRowHeaderWidth: 35,
                    rowHeight: 43,
                    paginationCurrentPage: 1,
                    totalItems: 0,
                    enableColumnResizing: true,
                    enableColumnMoving: true,
                    enableRowSelection: false,
                    enableGroupHeaderSelection: true,
                    enableRowHeaderSelection: false,
                    enableSelectAll: false,
                    exporterMenuPdf: false,
                    rowTemplate: rowTlp
                }
            },
            getDetailsEntOrgDetailGridDef: function ($scope) {
                return [
                    { displayName: "Enterprise Organization Id", field: 'ent_org_id', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Enterprise Organization Name", field: 'ent_org_name', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Enterprise Organization Source Code", field: 'ent_org_src_cd', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Enterprise Organization Source ID", field: 'nk_ent_org_id', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Created By", field: 'created_by', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Created Date", field: 'created_at', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Master Count", field: 'mstr_cnt', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Bridge Count", field: 'brid_cnt', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Last Modified By", field: 'last_modified_by', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Last Modified At", field: 'last_modified_at', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Last Modified By All", field: 'last_modified_by_all', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Last Modified At All", field: 'last_modified_at_all', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Last Reviewed By", field: 'last_reviewed_by', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Last Reviewed At", field: 'last_reviewed_at', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Action", field: 'user_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
                ];
            },
            getDetailsRFMDetailsGridDef: function ($scope) {
                return [
                    { displayName: 'Icon', field: 'row_stat_cd', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 40, maxWidth: 40, cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/iconImageDetails.tpl.html' },
                    { displayName: "Line Of Business", field: 'line_of_srvc_cd', width: "*", visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Recent Patronage Date", field: 'rcnt_patrng_dt', width: "*", visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'NA\'}}</div>' },
                    { displayName: "Total Patronage Count", field: 'totl_dntn_cnt', type: 'number', width: "*", visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div ng-show="row.entity.line_of_srvc_cd == \'BIO\'" class="wordwrap">{{COL_FIELD || \'0\'}} drive(s)</div><div ng-show="row.entity.line_of_srvc_cd == \'FR\'" class="wordwrap">{{COL_FIELD || \'0\'}} gift(s)</div><div ng-show="row.entity.line_of_srvc_cd == \'PHSS\'" class="wordwrap">{{COL_FIELD || \'0\'}} order(s)</div>' },
                    { displayName: "Total Patronage Value", field: 'totl_dntn_val', type: 'number', width: "*", visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div ng-show="row.entity.line_of_srvc_cd == \'BIO\'" class="wordwrap">{{COL_FIELD || \'0\'}} blood unit(s)</div><div ng-show="row.entity.line_of_srvc_cd != \'BIO\'" class="wordwrap">{{COL_FIELD || \'0\' | currency}}</div>' },
                    { displayName: "Recency Score", field: 'rcncy_scr', type: 'number', width: "*", visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Frequency Score", field: 'freq_scr', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Value Score", field: 'dntn_scr', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Total RFM Score", field: 'totl_rfm_scr', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "DW Timestamp", field: 'dw_srcsys_trans_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Start Date", field: 'rfm_scr_strt_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "End Date", field: 'rfm_scr_end_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('RFMDetails', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' }
                ];
            },
            getDetailsTransformationDetailGridDef: function ($scope) {
                return [
                    { displayName: 'Icon', field: 'row_stat_cd', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 40, maxWidth: 40, cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/iconImageTransformationDetails.tpl.html', enableSorting: false },
                    { displayName: "Affiliation Matching Rule ID", field: 'cdim_transform_id', grouping: { groupPriority: 0 }, sort: { priority: 0, direction: uiGridConstants.DESC }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 80, maxWidth: 9000, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
                    { displayName: "Affiliation Matching Rule Condition", field: 'conditional', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 300, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Rule Objective", field: 'ent_org_branch', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, treeAggregationType: uiGridGroupingConstants.aggregation.MAX, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div ng-show="row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div>', enableSorting: false },
                    { displayName: "Active Indicator", field: 'act_ind', type: 'number', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, treeAggregationType: uiGridGroupingConstants.aggregation.MAX, width: "*", minWidth: 30, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div ng-show="row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div>', enableSorting: false },
                    { displayName: "Number of Masters", field: 'mstr_cnt', type: 'number', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, treeAggregationType: uiGridGroupingConstants.aggregation.MAX, width: "*", minWidth: 40, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div ng-show="row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div>', enableSorting: false },
                    { displayName: "Transaction Key", field: 'transaction_key', type: 'number', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, treeAggregationType: uiGridGroupingConstants.aggregation.MAX, width: "*", minWidth: 100, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div ng-show="row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div>', enableSorting: false },
                    { displayName: "DW Timestamp", field: 'dw_srcsys_trans_ts', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, treeAggregationType: uiGridGroupingConstants.aggregation.MAX, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div ng-show="row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg | column_date_filter}} </div>', enableSorting: false },
                    { displayName: "Start Date", field: 'org_nm_transform_strt_dt', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", treeAggregationType: uiGridGroupingConstants.aggregation.MAX, minWidth: 100, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div ng-show="row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div>', enableSorting: false },
                    { displayName: "End Date", field: 'org_nm_transform_end_dt', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", treeAggregationType: uiGridGroupingConstants.aggregation.MAX, minWidth: 100, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div ng-show="row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div>', enableSorting: false },
                    { displayName: "Action", field: 'strTransNotes', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTransformationTemplate.tpl.html', minWidth: 300, maxWidth: 9000, width: "*", visible: true, enableFiltering: false, enableSorting: false }
                ];
            },
            //getDetailsTransformationDetailGridDef: function ($scope) {
            //    return [
            //        { displayName: 'Icon', field: 'row_stat_cd', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 40, maxWidth: 40, cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/iconImageDetails.tpl.html' },
            //        { displayName: "Transformation ID", field: 'cdim_transform_id', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 80, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Transformation Condition", field: 'conditional', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 500, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Comments", field: 'ent_org_branch', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Active Indicator", field: 'act_ind', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Number of Masters", field: 'mstr_cnt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Transaction Key", field: 'transaction_key', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Datawarehouse Transaction Timestamp", field: 'dw_srcsys_trans_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Start Date", field: 'org_nm_transform_strt_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "End Date", field: 'org_nm_transform_end_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransformationDetail', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Action", field: 'strTransNotes', headerCellTemplate: GRID_HEADER_TEMPLATE, cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', minWidth: 300, maxWidth: 9000, width: "*", visible: true, enableFiltering: false }
            //    ];
            //},
            getDetailsTagsGridDef: function ($scope) {
                return [
                    { displayName: 'Icon', field: 'row_stat_cd', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 40, maxWidth: 40, cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/iconImageDetails.tpl.html' },
                    { displayName: "Tag", field: 'tag', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('Tags', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "DW Timestamp", field: 'dw_trans_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('Tags', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Start Date", field: 'start_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('Tags', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "End Date", field: 'end_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('Tags', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Transaction Key", field: 'trans_key', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('Tags', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Last Modified By", field: 'user_id', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('Tags', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Action", field: 'user_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
                ];
            },
            //Grid with all the 5 levels enabled
            //getDetailsEntOrgHierarchyGridDef: function ($scope) {
            //    return [
            //        { displayName: 'Icon', field: 'row_stat_cd', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 40, maxWidth: 40, cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/iconImageDetails.tpl.html' },
            //        { displayName: "Key", field: 'lvl1_ent_org_id', type: 'number', grouping: { groupPriority: 0 }, sort: { priority: 0, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 200, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">(Level 1) {{COL_FIELD}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents wordwrap"> (Level 2) {{row.treeNode.aggregations[1].groupVal}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents wordwrap">  (Level 3) {{row.treeNode.aggregations[2].groupVal}}</div><div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents wordwrap">   (Level 4) {{row.treeNode.aggregations[3].groupVal}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap">    (Level 5) {{row.entity.lvl5_ent_org_id}}</div></div>' },
            //        { displayName: "Key(Level 2)", field: 'lvl2_ent_org_id', visible: false, grouping: { groupPriority: 1 }, sort: { priority: 1, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
            //        { displayName: "Key(Level 3)", field: 'lvl3_ent_org_id', visible: false, grouping: { groupPriority: 2 }, sort: { priority: 2, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
            //        { displayName: "Key(Level 4)", field: 'lvl4_ent_org_id', visible: false, grouping: { groupPriority: 3 }, sort: { priority: 3, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
            //        { displayName: "Key(Level 5)", field: 'lvl5_ent_org_id', visible: false, sort: { priority: 4, direction: 'asc' }, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
            //        { displayName: 'Name', field: 'lvl1_ent_org_name', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" ng-click="grid.appScope.look(row)"  class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[5].value | removeAggCustom}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[6].value | removeAggCustom}}</div><div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[7].value | removeAggCustom}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{row.entity.lvl5_ent_org_name}}</div>' },
            //        { displayName: 'Name(Level 2)', field: 'lvl2_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div>', enableSorting: false },
            //        { displayName: 'Name(Level 3)', field: 'lvl3_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div>', enableSorting: false },
            //        { displayName: 'Name(Level 4)', field: 'lvl4_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div>', enableSorting: false },
            //        { displayName: 'Name(Level 5)', field: 'lvl5_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (FR-BIO-PHSS)', field: 'lvl1_fr_rcnt_patrng_dt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[9].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[10].value | removeAggCustom : \'NA\'}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[11].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[12].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[13].value | removeAggCustom : \'NA\'}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[14].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[15].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[16].value | removeAggCustom : \'NA\'}}</div><div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[17].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[18].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[19].value | removeAggCustom : \'NA\'}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl5_fr_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl5_bio_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl5_phss_rcnt_patrng_dt || \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (BIO)(Level 1)', field: 'lvl1_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (PHSS)(Level 1)', field: 'lvl1_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (FR)(Level 2)', field: 'lvl2_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (BIO)(Level 2)', field: 'lvl2_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (PHSS)(Level 2)', field: 'lvl2_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (FR)(Level 3)', field: 'lvl3_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (BIO)(Level 3)', field: 'lvl3_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (PHSS)(Level 3)', field: 'lvl3_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (FR)(Level 4)', field: 'lvl4_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (BIO)(Level 4)', field: 'lvl4_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (PHSS)(Level 4)', field: 'lvl4_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (FR)(Level 5)', field: 'lvl5_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (BIO)(Level 5)', field: 'lvl5_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Last Patronage (PHSS)(Level 5)', field: 'lvl5_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
            //        { displayName: 'Count (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_cnt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[21].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[22].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[23].value | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[24].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[25].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[26].value | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[27].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[28].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[29].value | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[30].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[31].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl5_fr_totl_dntn_cnt || \'0\'}} gift(s)<br/>{{row.entity.lvl5_bio_totl_dntn_cnt || \'0\'}} drive(s)<br/>{{row.entity.lvl5_phss_totl_dntn_cnt || \'0\'}} order(s)</div>', enableSorting: false },
            //        { displayName: 'Count (BIO)(Level 1)', field: 'lvl1_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
            //        { displayName: 'Count (PHSS)(Level 1)', field: 'lvl1_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
            //        { displayName: 'Count (FR)(Level 2)', field: 'lvl2_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)</div>', enableSorting: false },
            //        { displayName: 'Count (BIO)(Level 2)', field: 'lvl2_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
            //        { displayName: 'Count (PHSS)(Level 2)', field: 'lvl2_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
            //        { displayName: 'Count (FR)(Level 3)', field: 'lvl3_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)</div>', enableSorting: false },
            //        { displayName: 'Count (BIO)(Level 3)', field: 'lvl3_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
            //        { displayName: 'Count (PHSS)(Level 3)', field: 'lvl3_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
            //        { displayName: 'Count (FR)(Level 4)', field: 'lvl4_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)</div>', enableSorting: false },
            //        { displayName: 'Count (BIO)(Level 4)', field: 'lvl4_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
            //        { displayName: 'Count (PHSS)(Level 4)', field: 'lvl4_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
            //        { displayName: 'Count (FR)(Level 5)', field: 'lvl5_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} gift(s)</div>', enableSorting: false },
            //        { displayName: 'Count (BIO)(Level 5)', field: 'lvl5_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} drive(s)</div>', enableSorting: false },
            //        { displayName: 'Count (PHSS)(Level 5)', field: 'lvl5_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} order(s)</div>', enableSorting: false },
            //        { displayName: 'Value (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_val', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[33].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[34].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[35].value | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[36].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[37].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[38].value | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[39].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[40].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[41].value | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[42].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[43].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl5_fr_totl_dntn_val || \'0\' | currency}}<br/>{{row.entity.lvl5_bio_totl_dntn_val || \'0\'}} blood unit(s)<br/>{{row.entity.lvl5_phss_totl_dntn_val || \'0\' | currency}}</div>', enableSorting: false },
            //        { displayName: 'Value (BIO)(Level 1)', field: 'lvl1_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
            //        { displayName: 'Value (PHSS)(Level 1)', field: 'lvl1_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
            //        { displayName: 'Value (FR)(Level 2)', field: 'lvl2_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
            //        { displayName: 'Value (BIO)(Level 2)', field: 'lvl2_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
            //        { displayName: 'Value (PHSS)(Level 2)', field: 'lvl2_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
            //        { displayName: 'Value (FR)(Level 3)', field: 'lvl3_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
            //        { displayName: 'Value (BIO)(Level 3)', field: 'lvl3_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
            //        { displayName: 'Value (PHSS)(Level 3)', field: 'lvl3_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
            //        { displayName: 'Value (FR)(Level 4)', field: 'lvl4_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
            //        { displayName: 'Value (BIO)(Level 4)', field: 'lvl4_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
            //        { displayName: 'Value (PHSS)(Level 4)', field: 'lvl4_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
            //        { displayName: 'Value (FR)(Level 5)', field: 'lvl5_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
            //        { displayName: 'Value (BIO)(Level 5)', field: 'lvl5_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} blood unit(s)</div>', enableSorting: false },
            //        { displayName: 'Value (PHSS)(Level 5)', field: 'lvl5_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
            //        { displayName: "Action", field: 'user_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
            //    ];
            //},
            getDetailsEntOrgHierarchyGridDef: function ($scope, level) {
                if (level == 5) {
                    return [
						{ displayName: "Key", field: 'lvl1_ent_org_id', type: 'number', grouping: { groupPriority: 0 }, sort: { priority: 0, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 200, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">(L1) {{COL_FIELD}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents wordwrap">(L2) {{row.treeNode.aggregations[1].groupVal}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents wordwrap">(L3) {{row.treeNode.aggregations[2].groupVal}}</div><div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents wordwrap">(L4) {{row.treeNode.aggregations[3].groupVal}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap">(L5) {{row.entity.lvl5_ent_org_id}}</div></div>' },
						{ displayName: "Key(L2)", field: 'lvl2_ent_org_id', visible: false, grouping: { groupPriority: 1 }, sort: { priority: 1, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: "Key(L3)", field: 'lvl3_ent_org_id', visible: false, grouping: { groupPriority: 2 }, sort: { priority: 2, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: "Key(L4)", field: 'lvl4_ent_org_id', visible: false, grouping: { groupPriority: 3 }, sort: { priority: 3, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: "Key(L5)", field: 'lvl5_ent_org_id', visible: false, sort: { priority: 4, direction: 'asc' }, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: 'Name', field: 'lvl1_ent_org_name', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" ng-click="grid.appScope.look(row)"  class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[5].value | removeAggCustom}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[6].value | removeAggCustom}}</div><div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[7].value | removeAggCustom}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{row.entity.lvl5_ent_org_name}}</div>' },
						{ displayName: 'Name(L2)', field: 'lvl2_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div>', enableSorting: false },
						{ displayName: 'Name(L3)', field: 'lvl3_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div>', enableSorting: false },
						{ displayName: 'Name(L4)', field: 'lvl4_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div>', enableSorting: false },
						{ displayName: 'Name(L5)', field: 'lvl5_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR-BIO-PHSS)', field: 'lvl1_fr_rcnt_patrng_dt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[9].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[10].value | removeAggCustom : \'NA\'}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[11].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[12].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[13].value | removeAggCustom : \'NA\'}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[14].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[15].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[16].value | removeAggCustom : \'NA\'}}</div><div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[17].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[18].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[19].value | removeAggCustom : \'NA\'}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl5_fr_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl5_bio_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl5_phss_rcnt_patrng_dt || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L1)', field: 'lvl1_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L1)', field: 'lvl1_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR)(L2)', field: 'lvl2_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L2)', field: 'lvl2_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L2)', field: 'lvl2_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR)(L3)', field: 'lvl3_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L3)', field: 'lvl3_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L3)', field: 'lvl3_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR)(L4)', field: 'lvl4_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L4)', field: 'lvl4_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L4)', field: 'lvl4_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR)(L5)', field: 'lvl5_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L5)', field: 'lvl5_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L5)', field: 'lvl5_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Count (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_cnt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[21].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[22].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[23].value | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[24].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[25].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[26].value | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[27].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[28].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[29].value | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[30].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[31].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl5_fr_totl_dntn_cnt || \'0\'}} gift(s)<br/>{{row.entity.lvl5_bio_totl_dntn_cnt || \'0\'}} drive(s)<br/>{{row.entity.lvl5_phss_totl_dntn_cnt || \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L1)', field: 'lvl1_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L1)', field: 'lvl1_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (FR)(L2)', field: 'lvl2_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L2)', field: 'lvl2_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L2)', field: 'lvl2_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (FR)(L3)', field: 'lvl3_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L3)', field: 'lvl3_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L3)', field: 'lvl3_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (FR)(L4)', field: 'lvl4_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L4)', field: 'lvl4_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L4)', field: 'lvl4_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (FR)(L5)', field: 'lvl5_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} gift(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L5)', field: 'lvl5_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L5)', field: 'lvl5_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Value (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_val', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[33].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[34].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[35].value | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[36].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[37].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[38].value | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[39].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[40].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[41].value | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[42].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[43].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl5_fr_totl_dntn_val || \'0\' | currency}}<br/>{{row.entity.lvl5_bio_totl_dntn_val || \'0\'}} blood unit(s)<br/>{{row.entity.lvl5_phss_totl_dntn_val || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L1)', field: 'lvl1_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L1)', field: 'lvl1_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (FR)(L2)', field: 'lvl2_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L2)', field: 'lvl2_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L2)', field: 'lvl2_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (FR)(L3)', field: 'lvl3_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L3)', field: 'lvl3_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L3)', field: 'lvl3_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (FR)(L4)', field: 'lvl4_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L4)', field: 'lvl4_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L4)', field: 'lvl4_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 3" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (FR)(L5)', field: 'lvl5_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L5)', field: 'lvl5_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L5)', field: 'lvl5_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: "Action", field: 'user_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
                    ];
                }
                else if (level == 4) {
                    return [
						{ displayName: "Key", field: 'lvl1_ent_org_id', type: 'number', grouping: { groupPriority: 0 }, sort: { priority: 0, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 200, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">(L1) {{COL_FIELD}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents wordwrap">(L2) {{row.treeNode.aggregations[1].groupVal}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents wordwrap">(L3) {{row.treeNode.aggregations[2].groupVal}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap">(L4) {{row.entity.lvl4_ent_org_id}}</div></div>' },
						{ displayName: "Key(L2)", field: 'lvl2_ent_org_id', visible: false, grouping: { groupPriority: 1 }, sort: { priority: 1, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: "Key(L3)", field: 'lvl3_ent_org_id', visible: false, grouping: { groupPriority: 2 }, sort: { priority: 2, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: "Key(L4)", field: 'lvl4_ent_org_id', visible: false, sort: { priority: 3, direction: 'asc' }, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: 'Name', field: 'lvl1_ent_org_name', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" ng-click="grid.appScope.look(row)"  class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[4].value | removeAggCustom}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[5].value | removeAggCustom}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{row.entity.lvl4_ent_org_name}}</div>' },
						{ displayName: 'Name(L2)', field: 'lvl2_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div>', enableSorting: false },
						{ displayName: 'Name(L3)', field: 'lvl3_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div>', enableSorting: false },
						{ displayName: 'Name(L4)', field: 'lvl4_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR-BIO-PHSS)', field: 'lvl1_fr_rcnt_patrng_dt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[7].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[8].value | removeAggCustom : \'NA\'}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[9].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[10].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[11].value | removeAggCustom : \'NA\'}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[12].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[13].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[14].value | removeAggCustom : \'NA\'}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl4_fr_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl4_bio_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl4_phss_rcnt_patrng_dt || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L1)', field: 'lvl1_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L1)', field: 'lvl1_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR)(L2)', field: 'lvl2_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L2)', field: 'lvl2_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L2)', field: 'lvl2_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR)(L3)', field: 'lvl3_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L3)', field: 'lvl3_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L3)', field: 'lvl3_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR)(L4)', field: 'lvl4_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L4)', field: 'lvl4_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L4)', field: 'lvl4_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Count (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_cnt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[16].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[17].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[18].value | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[19].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[20].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[21].value | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[22].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[23].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl4_fr_totl_dntn_cnt || \'0\'}} gift(s)<br/>{{row.entity.lvl4_bio_totl_dntn_cnt || \'0\'}} drive(s)<br/>{{row.entity.lvl4_phss_totl_dntn_cnt || \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L1)', field: 'lvl1_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L1)', field: 'lvl1_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (FR)(L2)', field: 'lvl2_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L2)', field: 'lvl2_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L2)', field: 'lvl2_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (FR)(L3)', field: 'lvl3_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L3)', field: 'lvl3_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L3)', field: 'lvl3_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (FR)(L4)', field: 'lvl4_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} gift(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L4)', field: 'lvl4_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L4)', field: 'lvl4_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Value (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_val', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[25].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[26].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[27].value | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[28].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[29].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[30].value | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[31].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[32].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl4_fr_totl_dntn_val || \'0\' | currency}}<br/>{{row.entity.lvl4_bio_totl_dntn_val || \'0\'}} blood unit(s)<br/>{{row.entity.lvl4_phss_totl_dntn_val || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L1)', field: 'lvl1_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L1)', field: 'lvl1_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (FR)(L2)', field: 'lvl2_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L2)', field: 'lvl2_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L2)', field: 'lvl2_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (FR)(L3)', field: 'lvl3_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L3)', field: 'lvl3_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L3)', field: 'lvl3_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (FR)(L4)', field: 'lvl4_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L4)', field: 'lvl4_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L4)', field: 'lvl4_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: "Action", field: 'user_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
                    ];
                }
                else if (level == 3) {
                    return [
						{ displayName: "Key", field: 'lvl1_ent_org_id', type: 'number', grouping: { groupPriority: 0 }, sort: { priority: 0, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 200, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">(L1) {{COL_FIELD}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents wordwrap">(L2) {{row.treeNode.aggregations[1].groupVal}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap">(L3) {{row.entity.lvl3_ent_org_id}}</div></div>' },
						{ displayName: "Key(L2)", field: 'lvl2_ent_org_id', visible: false, grouping: { groupPriority: 1 }, sort: { priority: 1, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: "Key(L3)", field: 'lvl3_ent_org_id', visible: false, sort: { priority: 2, direction: 'asc' }, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: 'Name', field: 'lvl1_ent_org_name', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" ng-click="grid.appScope.look(row)"  class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[3].value | removeAggCustom}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{row.entity.lvl3_ent_org_name}}</div>' },
						{ displayName: 'Name(L2)', field: 'lvl2_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div>', enableSorting: false },
						{ displayName: 'Name(L3)', field: 'lvl3_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR-BIO-PHSS)', field: 'lvl1_fr_rcnt_patrng_dt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[5].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[6].value | removeAggCustom : \'NA\'}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[7].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[8].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[9].value | removeAggCustom : \'NA\'}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl3_fr_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl3_bio_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl3_phss_rcnt_patrng_dt || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L1)', field: 'lvl1_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L1)', field: 'lvl1_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR)(L2)', field: 'lvl2_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L2)', field: 'lvl2_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L2)', field: 'lvl2_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR)(L3)', field: 'lvl3_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L3)', field: 'lvl3_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L3)', field: 'lvl3_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Count (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_cnt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[11].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[12].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[13].value | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[14].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[15].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl3_fr_totl_dntn_cnt || \'0\'}} gift(s)<br/>{{row.entity.lvl3_bio_totl_dntn_cnt || \'0\'}} drive(s)<br/>{{row.entity.lvl3_phss_totl_dntn_cnt || \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L1)', field: 'lvl1_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L1)', field: 'lvl1_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (FR)(L2)', field: 'lvl2_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L2)', field: 'lvl2_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L2)', field: 'lvl2_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (FR)(L3)', field: 'lvl3_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} gift(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L3)', field: 'lvl3_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L3)', field: 'lvl3_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Value (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_val', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[17].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[18].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{row.treeNode.aggregations[19].value | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[20].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[21].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl3_fr_totl_dntn_val || \'0\' | currency}}<br/>{{row.entity.lvl3_bio_totl_dntn_val || \'0\'}} blood unit(s)<br/>{{row.entity.lvl3_phss_totl_dntn_val || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L1)', field: 'lvl1_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L1)', field: 'lvl1_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (FR)(L2)', field: 'lvl2_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L2)', field: 'lvl2_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L2)', field: 'lvl2_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (FR)(L3)', field: 'lvl3_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L3)', field: 'lvl3_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L3)', field: 'lvl3_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: "Action", field: 'user_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
                    ];
                }
                else if (level == 2) {
                    return [
						{ displayName: "Key", field: 'lvl1_ent_org_id', type: 'number', grouping: { groupPriority: 0 }, sort: { priority: 0, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 200, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">(L1) {{COL_FIELD}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap">(L2) {{row.entity.lvl2_ent_org_id}}</div></div>' },
						{ displayName: "Key(L2)", field: 'lvl2_ent_org_id', visible: false, sort: { priority: 1, direction: 'asc' }, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div ng-show="!col.grouping" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: 'Name', field: 'lvl1_ent_org_name', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" ng-click="grid.appScope.look(row)"  class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{row.entity.lvl2_ent_org_name}}</div>' },
						{ displayName: 'Name(L2)', field: 'lvl2_ent_org_name', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR-BIO-PHSS)', field: 'lvl1_fr_rcnt_patrng_dt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[3].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[4].value | removeAggCustom : \'NA\'}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl2_fr_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl2_bio_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl2_phss_rcnt_patrng_dt || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L1)', field: 'lvl1_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L1)', field: 'lvl1_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR)(L2)', field: 'lvl2_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)(L2)', field: 'lvl2_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)(L2)', field: 'lvl2_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Count (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_cnt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[6].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[7].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl2_fr_totl_dntn_cnt || \'0\'}} gift(s)<br/>{{row.entity.lvl2_bio_totl_dntn_cnt || \'0\'}} drive(s)<br/>{{row.entity.lvl2_phss_totl_dntn_cnt || \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L1)', field: 'lvl1_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L1)', field: 'lvl1_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (FR)(L2)', field: 'lvl2_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} gift(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)(L2)', field: 'lvl2_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)(L2)', field: 'lvl2_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Value (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_val', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[9].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[10].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl2_fr_totl_dntn_val || \'0\' | currency}}<br/>{{row.entity.lvl2_bio_totl_dntn_val || \'0\'}} blood unit(s)<br/>{{row.entity.lvl2_phss_totl_dntn_val || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L1)', field: 'lvl1_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L1)', field: 'lvl1_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (FR)(L2)', field: 'lvl2_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)(L2)', field: 'lvl2_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)(L2)', field: 'lvl2_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: "Action", field: 'user_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
                    ];
                }
                else {
                    return [
						{ displayName: "Key", field: 'lvl1_ent_org_id', sort: { priority: 0, direction: 'asc' }, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div><div class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
						{ displayName: 'Name', field: 'lvl1_ent_org_name', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div class="ui-grid-cell-contents" >{{COL_FIELD}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (FR-BIO-PHSS)', field: 'lvl1_fr_rcnt_patrng_dt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl1_fr_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl1_bio_rcnt_patrng_dt || \'NA\'}}<br/>{{row.entity.lvl1_phss_rcnt_patrng_dt || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (BIO)', field: 'lvl1_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Last Patronage (PHSS)', field: 'lvl1_phss_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div class="ui-grid-cell-contents" >{{COL_FIELD || \'NA\'}}</div>', enableSorting: false },
						{ displayName: 'Count (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_cnt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl1_fr_totl_dntn_cnt || \'0\'}} gift(s)<br/>{{row.entity.lvl1_bio_totl_dntn_cnt || \'0\'}} drive(s)<br/>{{row.entity.lvl1_phss_totl_dntn_cnt || \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Count (BIO)', field: 'lvl1_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} drive(s)</div>', enableSorting: false },
						{ displayName: 'Count (PHSS)', field: 'lvl1_phss_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} order(s)</div>', enableSorting: false },
						{ displayName: 'Value (FR-BIO-PHSS)', field: 'lvl1_fr_totl_dntn_val', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div class="ui-grid-cell-contents wordwrap" >{{row.entity.lvl1_fr_totl_dntn_val || \'0\' | currency}}<br/>{{row.entity.lvl1_bio_totl_dntn_val || \'0\'}} blood unit(s)<br/>{{row.entity.lvl1_phss_totl_dntn_val || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: 'Value (BIO)', field: 'lvl1_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div class="ui-grid-cell-contents" >{{COL_FIELD || \'0\'}} blood unit(s)</div>', enableSorting: false },
						{ displayName: 'Value (PHSS)', field: 'lvl1_phss_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('EntOrgHierarchy', $scope), headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div class="ui-grid-cell-contents" >{{COL_FIELD || \'0\' | currency}}</div>', enableSorting: false },
						{ displayName: "Action", field: 'user_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
                    ];
                }
            },
            //getDetailsEntOrgHierarchyGridDef: function ($scope) {
            //    return [
            //        { displayName: 'Icon', field: 'row_stat_cd', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 40, maxWidth: 40, cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/iconImageDetails.tpl.html' },
            //        { displayName: "Superior Enterprise Organization Key", field: 'superior_ent_org_key', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Superior Enterprise Organization Name", field: 'superior_ent_org_name', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Superior Enterprise Org FR Recent Patronage Date", field: 'sup_fr_rcnt_patrng_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'N/A\'}}</div>' },
            //        { displayName: "Superior Enterprise Org FR Total Donation Count", field: 'sup_fr_totl_dntn_cnt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\'}}</div>' },
            //        { displayName: "Superior Enterprise Org FR Total Donation Value", field: 'sup_fr_totl_dntn_val', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\' | currency}}</div>' },
            //        { displayName: "Superior Enterprise Org BIO Recent Patronage Date", field: 'sup_bio_rcnt_patrng_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'N/A\'}}</div>' },
            //        { displayName: "Superior Enterprise Org BIO Total Donation Count", field: 'sup_bio_totl_dntn_cnt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\'}}</div>' },
            //        { displayName: "Superior Enterprise Org BIO Total Donation Value", field: 'sup_bio_totl_dntn_val', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\'}}</div>' },
            //        { displayName: "Superior Enterprise Org PHSS Recent Patronage Date", field: 'sup_hs_rcnt_patrng_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'N/A\'}}</div>' },
            //        { displayName: "Superior Enterprise Org PHSS Total Donation Count", field: 'sup_hs_totl_dntn_cnt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\'}}</div>' },
            //        { displayName: "Superior Enterprise Org PHSS Total Donation Value", field: 'sup_hs_totl_dntn_val', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\' | currency}}</div>' },
            //        { displayName: "Subordinate Enterprise Organization Key", grouping: { groupPriority: 0 }, field: 'subord_ent_org_key', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Subordinate Enterprise Organization Name", field: 'subord_ent_org_name', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Subordinate Enterprise Org FR Recent Patronage Date", field: 'sub_fr_rcnt_patrng_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'N/A\'}}</div>' },
            //        { displayName: "Subordinate Enterprise Org FR Total Donation Count", field: 'sub_fr_totl_dntn_cnt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\'}}</div>' },
            //        { displayName: "Subordinate Enterprise Org FR Total Donation Value", field: 'sub_fr_totl_dntn_val', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\' | currency}}</div>' },
            //        { displayName: "Subordinate Enterprise Org BIO Recent Patronage Date", field: 'sub_bio_rcnt_patrng_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'N/A\'}}</div>' },
            //        { displayName: "Subordinate Enterprise Org BIO Total Donation Count", field: 'sub_bio_totl_dntn_cnt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\'}}</div>' },
            //        { displayName: "Subordinate Enterprise Org BIO Total Donation Value", field: 'sub_bio_totl_dntn_val', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\'}}</div>' },
            //        { displayName: "Subordinate Enterprise Org PHSS Recent Patronage Date", field: 'sub_hs_rcnt_patrng_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'N/A\'}}</div>' },
            //        { displayName: "Subordinate Enterprise Org PHSS Total Donation Count", field: 'sub_hs_totl_dntn_cnt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\'}}</div>' },
            //        { displayName: "Subordinate Enterprise Org PHSS Total Donation Value", field: 'sub_hs_totl_dntn_val', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD || \'0\' | currency}}</div>' },
            //        { displayName: "Hierarchy Name", field: 'rlshp_typ_desc', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "DW Timestamp", field: 'dw_trans_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
            //        { displayName: "Start Date", field: 'start_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
            //        { displayName: "End Date", field: 'end_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
            //        { displayName: "Last Modified By", field: 'user_id', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('EntOrgHierarchy', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //        { displayName: "Action", field: 'user_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
            //    ];
            //},
            getDetailsNaicsCodeStewGridDef: function ($scope) {
                return [
                    { displayName: "Org Master ID", field: 'cnst_mstr_id', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 120, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('NaicsCodeStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "NAICS CODE", field: 'naics_cd', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('NaicsCodeStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Description", field: 'naics_indus_dsc', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 800, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('NaicsCodeStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Rule Keyword", field: 'rule_keywrd', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('NaicsCodeStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Confidence weightage", field: 'conf_weightg', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('NaicsCodeStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Status", field: 'sts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('NaicsCodeStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' }
                ];
            },
            getDetailsRankingStewGridDef: function ($scope) {
                return [
                    { displayName: 'Icon', field: 'row_stat_cd', headerCellTemplate: GRID_HEADER_TEMPLATE, minWidth: 40, maxWidth: 40, cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/iconImageDetails.tpl.html' },
                    { displayName: "Rank Publish Year", field: 'org_rnk_publsh_yr', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Rank Provider", field: 'org_rnk_prvdr', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Rank Key", field: 'ent_org_rnk_key', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Actual rank", field: 'org_rnk', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Active Indicator", field: 'act_ind', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Created By", field: 'create_by', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Created At", field: 'create_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Last Modified By", field: 'updt_by', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Last Modified At", field: 'updt_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Start Date", field: 'org_rnk_map_strt_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "End Date", field: 'org_rnk_map_end_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "DW Timestamp", field: 'dw_srcsys_trans_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('RankingStew', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Action", field: 'user_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
                ];
            },
            getDetailsTransactionHistoryGridDef: function ($scope) {
                return [
                    { displayName: "Enterprise Org Id", field: 'ent_org_id', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 90, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Key", field: 'trans_key', type: 'number', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 90, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Transaction Type", field: 'trans_typ_dsc', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 200, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Sub Transaction Type", field: 'sub_trans_typ_dsc', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 200, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Action Type", field: 'sub_trans_actn_typ', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Transaction Status", field: 'trans_stat', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 160, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Transaction Note", field: 'trans_note', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 300, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "User Name", field: 'user_id', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Approved By", field: 'approved_by', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 140, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
                    { displayName: "Approved Date", field: 'approved_dt', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 160, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Start Date", field: 'trans_create_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 140, maxWidth: 9000, visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' },
                    { displayName: "Last Modified Date", field: 'trans_last_modified_ts', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 140, maxWidth: 9000, visible: true, filter: angular.copy(filterCondition), menuItems: customGridFilter('TransactionHistory', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD | column_date_filter}}</div>' }
                ];
            },
            //Ordering of the columns would result in issue with the data surfaced
            getDetailsMasterBridgeMasterGridDef: function ($scope) {
                return [
                        { displayName: 'Master Patronage', field: 'intrnl_prod_sys', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, minWidth: 50, maxWidth: 100, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, maxWidth: 30, maxHeight: 30, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0"><span ng-if="COL_FIELD == \'max: Active\'" tooltip-append-to-body="true" uib-tooltip="Active"><img src="Images/Active-User.png" width="20" height="20" /></span><span ng-if="COL_FIELD == \'max: Dormant\'" tooltip-append-to-body="true" uib-tooltip="Dormant"><img src="Images/warning.png" width="20" height="20" /></span></div>', enableSorting: false },
                        { displayName: 'DSP Verified', type: 'number', field: 'extn_sys_flag', groupingShowAggregationMenu: false, sort: { priority: 1, direction: 'desc' }, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, minWidth: 50, maxWidth: 100, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, maxWidth: 30, maxHeight: 30, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0"><span ng-if="COL_FIELD == \'max: 1\'" tooltip-append-to-body="true" uib-tooltip="Contains bridges which are externally validated"><img src="Images/TickEO.png" width="25" height="25" /></span></div>', enableSorting: false },
                        { displayName: "ID", field: 'cnst_mstr_id', type: 'number', grouping: { groupPriority: 2 }, sort: { priority: 2, direction: 'desc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" > ({{row.entity.arc_srcsys_cd}}) {{row.entity.cnst_srcsys_id}} </div></div>' },
                        { displayName: 'Org Type', field: 'eosi_org_typ', filter: angular.copy(filterConditionWildcard), sort: { priority: 0, direction: 'asc' }, menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 80, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div>', enableSorting: false },
                        { displayName: 'Name', field: 'mstr_name', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 110, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_name}} </div>', enableSorting: false },
                        { displayName: 'Address', field: 'mstr_address', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 110, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_address}} </div>', enableSorting: false },
                        { displayName: 'Phone', field: 'mstr_phone', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 90, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_phone}} </div>', enableSorting: false },
                        { displayName: 'Affiliation Match Rule Id', field: 'cdim_transform_id', type: 'number', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 70, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents wordwrap" > {{COL_FIELD | removeAgg }} </div>', enableSorting: false },
                        { displayName: 'Affiliation Start Timestamp', field: 'cnst_affil_strt_ts', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents wordwrap" > {{COL_FIELD | removeAgg | column_date_filter}} </div>', enableSorting: false },
                        { displayName: 'Last Patronage (FR-BIO-PHSS)', field: 'mstr_fr_rcnt_patrng_dt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[10].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[11].value | removeAggCustom : \'NA\'}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_rcnt_patrng_dt || \'NA\'}} </div>', enableSorting: false },
                        { displayName: 'Last Patronage (BIO)', field: 'mstr_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
                        { displayName: 'Last Patronage (PHSS)', field: 'mstr_hs_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
                        { displayName: 'Count (FR-BIO-PHSS)', field: 'mstr_fr_totl_dntn_cnt', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 70, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[13].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[14].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd == \'BIO\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_cnt || \'0\'}} drive(s)</div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd == \'FR\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_cnt || \'0\'}} gift(s)</div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd == \'PHSS\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_cnt || \'0\'}} order(s)</div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd != \'BIO\' && row.entity.line_of_service_cd != \'FR\' && row.entity.line_of_service_cd != \'PHSS\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_cnt || \'0\'}} </div>', enableSorting: false },
                        { displayName: 'Count (BIO)', field: 'mstr_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
                        { displayName: 'Count (PHSS)', field: 'mstr_hs_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
                        { displayName: 'Value (FR-BIO-PHSS)', field: 'mstr_fr_totl_dntn_val', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[16].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[17].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd == \'BIO\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_val || \'0\' }} blood unit(s)</div><div ng-show="!row.groupHeader && (row.entity.line_of_service_cd == \'FR\' || row.entity.line_of_service_cd == \'PHSS\')" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_val || \'0\' | currency}} </div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd != \'BIO\' && row.entity.line_of_service_cd != \'FR\' && row.entity.line_of_service_cd != \'PHSS\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_val || \'0\'}} </div>', enableSorting: false },
                        { displayName: 'Value (BIO)', field: 'mstr_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
                        { displayName: 'Value (PHSS)', field: 'mstr_hs_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
                        { displayName: 'Relationship Manager', field: 'bridge_lob_rlshp_mgr', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" > {{COL_FIELD}} </div>' },
                        { displayName: "Action", field: 'strx_transaction_key', type:'number', visible: true, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeMaster', $scope), cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDGroupMstTemplate.tpl.html', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 80, maxWidth: 9000, enableSorting: true }
                ];
            },
            //getDetailsMasterBridgeMasterGridDef: function ($scope) {
            //    return [
            //            { displayName: "Master ID", field: 'cnst_mstr_id', grouping: { groupPriority: 0 }, sort: { priority: 0, direction: 'desc' }, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents" title="TOOLTIP">{{COL_FIELD | removeAgg}}</div></div>' },
            //            { displayName: "Bridge Code", field: 'arc_srcsys_cd', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 5000, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //            { displayName: "Bridge ID", field: 'cnst_srcsys_id', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 5000, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), cellTemplate: '<div class="wordwrap">{{COL_FIELD}}</div>' },
            //            { displayName: 'Name', field: 'mstr_name', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > <a ng-click="grid.appScope.look(row)">{{COL_FIELD | removeAgg }}</a> </div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents" > <a ng-click="grid.appScope.look(row)">{{COL_FIELD | removeAgg }}</a> </div>' },
            //            { displayName: 'Master Address', field: 'mstr_address', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Master Phone', field: 'mstr_phone', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Transformation Id', field: 'cdim_transform_id', visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Affiliation Start Timestamp', field: 'cnst_affil_strt_ts', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Master FR Recency Score', field: 'mstr_fr_rcncy_scr', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Master FR Frequency Score', field: 'mstr_fr_freq_scr', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Master FR Donation Score', field: 'mstr_fr_dntn_scr', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Master BIO Recency Score', field: 'mstr_bio_rcncy_scr', visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Master BIO Frequency Score', field: 'mstr_bio_freq_scr', visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Master BIO Donation Score', field: 'mstr_bio_dntn_scr', visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Master PHSS Recency Score', field: 'mstr_hs_rcncy_scr', visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Master PHSS Frequency Score', field: 'mstr_hs_freq_scr', visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Master PHSS Donation Score', field: 'mstr_hs_dntn_scr', visible: false, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Bridge Type', field: 'intrnl_prod_sys', headerCellTemplate: GRID_HEADER_TEMPLATE, minWidth: 40, maxWidth: 40, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, maxWidth: 40, maxHeight: 40, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0"><span ng-if="COL_FIELD == \'max: Active\'" tooltip-append-to-body="true" uib-tooltip="Active"><img src="Images/Medal First Place-52.png" width="25" height="25" /></span><span ng-if="COL_FIELD == \'max: Dormant\'" tooltip-append-to-body="true" uib-tooltip="Dormant"><img src="Images/Expired-52.png" width="25" height="25" /></span></div>' },
            //            { displayName: 'Source Type', field: 'extn_sys_flag', headerCellTemplate: GRID_HEADER_TEMPLATE, minWidth: 40, maxWidth: 40, filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, maxWidth: 40, maxHeight: 40, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 0"><span ng-if="COL_FIELD == \'max: 1\'" tooltip-append-to-body="true" uib-tooltip="Contains bridges which are externally validated"><img src="Images/Medal First Place-52.png" width="25" height="25" /></span></div>' },
            //            //{ displayName: 'Bridge Name', field: 'bridge_name', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" >{{COL_FIELD | removeAgg }}</div>' },
            //            { displayName: 'Bridge Address', field: 'bridge_address', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Bridge FR Recency Score', field: 'bridge_rcncy_scr', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Bridge FR Frequency Score', field: 'bridge_freq_scr', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: 'Bridge FR Donation Score', field: 'bridge_fr_dntn_scr', filter: angular.copy(filterCondition), menuItems: customGridFilter('MasterBridgeMaster', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 50, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" > {{COL_FIELD | removeAgg }} </div>' },
            //            { displayName: "Action", field: 'cnst_mstr_id', cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDGroupMstTemplate.tpl.html', headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, visible: true, enableFiltering: false }
            //    ];
            //},

            //Ordering of the columns would result in issue with the data surfaced
            getDetailsMasterBridgeLocationGridDef: function ($scope) {
                return [
                        { displayName: 'Master Patronage', field: 'intrnl_prod_sys', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, minWidth: 50, maxWidth: 100, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, maxWidth: 40, maxHeight: 40, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2"><span ng-if="COL_FIELD == \'max: Active\'" tooltip-append-to-body="true" uib-tooltip="Active"><img src="Images/Active-User.png" width="20" height="20" /></span><span ng-if="COL_FIELD == \'max: Dormant\'" tooltip-append-to-body="true" uib-tooltip="Dormant"><img src="Images/warning.png" width="20" height="20" /></span></div>', enableSorting: false },
                        { displayName: 'DSP Verified', type: 'number', field: 'extn_sys_flag', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, minWidth: 50, maxWidth: 100, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, maxWidth: 40, maxHeight: 40, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2"><span ng-if="COL_FIELD == \'max: 1\'" tooltip-append-to-body="true" uib-tooltip="Contains bridges which are externally validated"><img src="Images/TickEO.png" width="25" height="25" /></span></div>', enableSorting: false },
                        { displayName: "State -> City", field: 'mstr_state', grouping: { groupPriority: 0 }, sort: { priority: 0, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 200, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP"> {{COL_FIELD | removeAggHeader}}</div><div ng-show="row.groupHeader && row.treeLevel == 1" class="ui-grid-cell-contents wordwrap">>{{row.treeNode.aggregations[3].groupVal}}</div></div>' },
                        { displayName: "City", field: 'mstr_city', visible: false, grouping: { groupPriority: 1 }, sort: { priority: 1, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 9000, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD}}</div></div>' },
                        { displayName: "ID", field: 'cnst_mstr_id', type: 'number', grouping: { groupPriority: 3 }, sort: { priority: 3, direction: 'asc' }, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 150, maxWidth: 200, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), cellTemplate: '<div><div ng-show="!col.grouping || col.grouping.groupPriority === undefined || col.grouping.groupPriority === null || ( row.groupHeader && col.grouping.groupPriority === row.treeLevel )" class="ui-grid-cell-contents wordwrap" title="TOOLTIP">{{COL_FIELD | removeAgg}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" > ({{row.entity.arc_srcsys_cd}}) {{row.entity.cnst_srcsys_id}} </div></div>' },
                        { displayName: 'Org Type', field: 'eosi_org_typ', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 80, maxWidth: 150, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div>', enableSorting: false },
                        { displayName: 'Name', field: 'mstr_name', filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 200, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_name}} </div>', enableSorting: false },
                        { displayName: 'Address', field: 'mstr_address', sort: { priority: 2, direction: 'asc' }, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 200, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_address}} </div>', enableSorting: false },
                        { displayName: 'Phone', field: 'mstr_phone', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 90, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents wordwrap" >{{COL_FIELD | removeAgg }} </div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_phone}} </div>', enableSorting: false },
                        { displayName: 'Affiliation Match Rule Id', field: 'cdim_transform_id', type: 'number', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 70, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents wordwrap" > {{COL_FIELD | removeAgg }} </div>', enableSorting: false },
                        { displayName: 'Affiliation Start Timestamp', field: 'cnst_affil_strt_ts', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents wordwrap" > {{COL_FIELD | removeAgg | column_date_filter}} </div>', enableSorting: false },
                        //{ displayName: 'Last Patronage (FR-BIO-PHSS)', field: 'mstr_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[12].value | removeAggCustom : \'NA\'}}<br/>{{row.treeNode.aggregations[13].value | removeAggCustom : \'NA\'}}</div><div ng-show="!row.groupHeader" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_rcnt_patrng_dt || \'NA\'}} </div>' },
                        { displayName: 'Last Patronage (FR)', field: 'mstr_fr_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
                        { displayName: 'Last Patronage (BIO)', field: 'mstr_bio_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
                        { displayName: 'Last Patronage (PHSS)', field: 'mstr_hs_rcnt_patrng_dt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'NA\'}}</div>', enableSorting: false },
                        //{ displayName: 'Count (FR-BIO-PHSS)', field: 'mstr_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 70, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)<br/>{{row.treeNode.aggregations[15].value | removeAggCustom : \'0\'}} drive(s)<br/>{{row.treeNode.aggregations[16].value | removeAggCustom : \'0\'}} order(s)</div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd == \'BIO\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_cnt || \'0\'}} drive(s)</div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd == \'FR\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_cnt || \'0\'}} gift(s)</div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd == \'PHSS\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_cnt || \'0\'}} order(s)</div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd != \'BIO\' && row.entity.line_of_service_cd != \'FR\' && row.entity.line_of_service_cd != \'PHSS\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_cnt || \'0\'}} </div>' },
                        { displayName: 'Count (FR)', field: 'mstr_fr_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 70, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} gift(s)</div>', enableSorting: false },
                        { displayName: 'Count (BIO)', field: 'mstr_bio_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} drive(s)</div>', enableSorting: false },
                        { displayName: 'Count (PHSS)', field: 'mstr_hs_totl_dntn_cnt', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} order(s)</div>', enableSorting: false },
                        //{ displayName: 'Value (FR-BIO-PHSS)', field: 'mstr_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}<br/>{{row.treeNode.aggregations[18].value | removeAggCustom : \'0\'}} blood unit(s)<br/>{{row.treeNode.aggregations[19].value | removeAggCustom : \'0\' | currency}}</div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd == \'BIO\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_val || \'0\' }} blood unit(s)</div><div ng-show="!row.groupHeader && (row.entity.line_of_service_cd == \'FR\' || row.entity.line_of_service_cd == \'PHSS\')" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_val || \'0\' | currency}} </div><div ng-show="!row.groupHeader && row.entity.line_of_service_cd != \'BIO\' && row.entity.line_of_service_cd != \'FR\' && row.entity.line_of_service_cd != \'PHSS\'" class="ui-grid-cell-contents wordwrap" > {{row.entity.bridge_totl_dntn_val || \'0\'}} </div>' },
                        { displayName: 'Value (FR)', field: 'mstr_fr_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
                        { displayName: 'Value (BIO)', field: 'mstr_bio_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\'}} blood unit(s)</div>', enableSorting: false },
                        { displayName: 'Value (PHSS)', field: 'mstr_hs_totl_dntn_val', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), treeAggregationType: uiGridGroupingConstants.aggregation.MAX, groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="row.groupHeader && row.treeLevel == 2" class="ui-grid-cell-contents" >{{COL_FIELD | removeAggCustom : \'0\' | currency}}</div>', enableSorting: false },
                        { displayName: 'Relationship Manager', field: 'bridge_lob_rlshp_mgr', visible: false, filter: angular.copy(filterConditionWildcard), menuItems: customGridFilter('MasterBridgeLocation', $scope), groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 100, maxWidth: 9000, cellTemplate: '<div ng-show="!row.groupHeader" class="ui-grid-cell-contents" > {{COL_FIELD}} </div>' },
                        { displayName: "Action", field: 'strx_transaction_key', visible: true, cellTemplate: 'App/EnterpriseAccount/Views/DetailSectionTemplates/actionDDGroupLocTemplate.tpl.html', groupingShowAggregationMenu: false, groupingShowGroupingMenu: false, headerCellTemplate: GRID_HEADER_TEMPLATE, width: "*", minWidth: 80, maxWidth: 9000, enableFiltering: true, enableSorting: true }
                ];
            },
            getCurrentDate: function () {
                return $filter('date')(new Date(), 'MM/dd/yyyy');
            },
            getEndDate: function () {
                return '12/31/9999';
            },
            getLower: function (val) {
                return $filter('lowercase')(val);
            }
        }

        function filterLRecords(data, columnName) {
            var tempData = [];
            angular.forEach(data, function (v, k) {
                if (columnName == "row_stat_cd")
                {
                    if (v.row_stat_cd != 'L')
                    {
                        tempData.push(v);
                    }
                }
                if (columnName == "act_ind") {
                    if (v.act_ind == 1) {
                        tempData.push(v);
                    }
                }
            });
            return tempData;
        }
        //Message Pop-up 
        function MessagePopup($rootScope, headerText, bodyText) {
            $rootScope.enterpriseAccountModalPopupHeaderText = headerText;
            $rootScope.enterpriseAccountModalPopupBodyText = bodyText;
            angular.element(enterpriseAccountMessageDialogBox).modal({ backdrop: "static" });
        }
    }]);


var ENT_ACC= {

    PLEASE_PROVIDE_INPUT: "Please provide at least one input value",
    ENT_ORG_HEADER: "Enterprise Org Creation",
    ENT_ORG_MESSAGE: "Enterprise Organization created successfully with Enterprise Org Id = ",
    ENT_ORG_EXIST_HEADER: "Enterprise Org Exists",
    ENT_ORG_EXIST_MESSAGE: "This Enterprise Organization Name is already Exists.",
    ENT_ORG_CREATION_HEADER: "Enterprise Org Creation",
    ENT_ORG_CREATION_MESSAGE: "Enterprise Organization creation failed",
    ENT_ORG_EDIT_HEADER: "Edit Enterprise Org",
    ENT_ORG_EDIT_MESSAGE: "Enterprise Org edited successfully",
    ENT_ORG_EDIT_FAILEDMESSAGE: "Enterprise Org edit failed",
    ENT_ORG_CREATION_FAILEDMESSAGE: "Enterprise Org creation failed",
    ENT_ORG_DELETE_HEADER: "Delete Enterprise Org",
    ENT_ORG_DELETE_MESSAGE: "Enterprise Org deleted successfully with Transaction key = ",
    ENT_ORG_EDITION_MESSAGE: "Enterprise Org edited successfully with Transaction key = ",
    ENT_ORG_DELETION_MESSAGE: "Enterprise Org deletion failed",
    ENT_ORG_NEWNAME_HEADER: "Add New Name",
    ENT_ORG_NEWNAME_MESSAGE: "Currently, this functionality is in the development stage.",
    ENT_ORG_NEWADDRESS_HEADER: "Add New Address",
    ENT_ORG_NEWADDRESS_MESSAGE: "Currently, this functionality is in the development stage.",
    ENT_ORG_NEWNOHEADER: "Add New Phone Number",
    ENT_ORG_NEWNOMESSAGE: "Currently, this functionality is in the development stage.",
    ENT_ORG_NEWIDHEADER: "Add New Enterprise Org ID",
    ENT_ORG_NEWIDMESSAGE: "Currently, this functionality is in the development stage.",
    ACCESS_DENIED_HEADER: "Error: Access Denied",
    TIMED_OUT_HEADER: "Error: Timed Out",
    ENT_ORG_CURRENTLY_CONSTRUCTION: 'This feature is currently under construction',
    ONLY_FIVE: "A maximum of only 5 search rows can be added.",
    ATLEAST_ONE_CRITERIA: "Please provide at least one input criteria before search",
    LOCAL_STORAGE_CLEARED: "LocalStorage seems just to be cleared out! Please proceed with the regular search"

}

enterpriseAccMod.constant('ENT_DETAIL_CRUD', {
    DB_ERROR_CONFIRM: "Error: Database Error",
    DB_ERROR_MESSAGE: "A database error occurred. Please try again later and if it persists, contact the Orgler Administrator (OrglerAdmin@redcross.org).",

    TAG_DDL_GET_ERR_MSG: 'A database error occurred while fetching the list of tags. Please try again later and if it persists, contact the Orgler Administrator (OrglerAdmin@redcross.org).',
    TAG_ADD_HDR: 'Add Tag',
    TAG_ADD_VERIFICATION_MSG: 'Success',
    TAG_ADD_SUCCESS_MSG: 'The enterprise organization has been tagged with \'',
    TAG_DELETE_HDR: 'Delete Tag',
    TAG_DELETE_SUCCESS_MSG: 'The enterprise organization has been un-tagged from \'',
    TAG_KEY_MISSING_VERIFICATION_MSG: 'Error while finding the tag key',
    TAG_KEY_MISSING_ERROR_MSG: 'Selected tag does not exist. Please verify.',
    TAG_DUP_VERIFICATION_MSG: 'duplicate',
    TAG_DUP_ERROR_MSG: 'Noticed duplicate insertion, since the enterprise organization has already been tagged with \'',

    TRANSFORMATION_ADD_HDR: 'Add Affiliation Matching Rules',
    TRANSFORMATION_ADD_VERIFICATION_MSG: 'Success',
    TRANSFORMATION_ADD_SUCCESS_MSG: 'Your request has been submitted. Transaction number is ',
    TRANSFORMATION_EDIT_HDR: 'Edit Affiliation Matching Rules',
    TRANSFORMATION_DEL_HDR: 'Delete Affiliation Matching Rules',

    AFFILIATION_ADD_HDR: 'Add Affiliation',
    AFFILIATION_ADD_VERIFICATION_MSG: 'Success',
    AFFILIATION_DELETE_HDR: 'Delete Affiliation',
    AFFILIATION_SUCCESS_MSG: 'The request has been submitted with transaction key - \'',
    AFFILIATION_DUP_VERIFICATION_MSG: 'duplicate',
    AFFILIATION_MISSING_ORG_VERIFICATION_MSG: 'The original record is not present.',
    AFFILIATION_MISSING_ORG_MSG: 'Selected affiliation does not exist. Please verify.'
});


